# 数据共30行，每6行一组。每组包含：强化学习，自拟的板坯全部配给库存，自拟的板坯（1-0.2）的概率配给库存，
# 完全greedy，出钢记号为4,5,6的执泥合同的板坯配给库存，随机选择50%的板坯参与匹配剩余的配给库存。
# 五个评价指标：用户合同匹配利润，自拟合同匹配费用（<=0），库存费用， 交货合同的欠量惩罚，每日出钢记号恰好相等的匹配量
import numpy as np
import matplotlib.pyplot as plt

colorList = [ "#9b59b6", "k", "r", "orange", "#2ecc71", "#3498db"] # darkviolet
markerList = ['o', '+', 'h', '^', '*', 's', 'h', '2', 'p']

l1 = [157.57836666666665, 224.42103333333344, 131.45503333333332, 175.68953333333337, 212.05786666666663, 182.5240666666667, 170.58679999999998, 176.53170000000006, 262.3444333333333, 138.88913333333332, 106.26790000000004, 196.1872666666667, 146.77183333333332, 189.1590666666667, 124.5528, 227.39109999999997, 161.6160000000001, 96.32346666666666, 129.6355333333333, 117.30186666666668]
l2 = [54.62056666666667, 90.51013333333331, 83.44879999999999, 73.77949999999994, 87.69053333333335, 76.90840000000006, 90.30706666666669, 61.32789999999999, 126.37773333333338, 60.7052, 62.468666666666664, 77.2566, 72.96183333333333, 99.85136666666669, 108.8815333333333, 57.53026666666666, 105.72979999999994, 70.88269999999999, 97.37276666666669, 92.7173]
l3 = [41.55496666666667, 63.75726666666667, 57.9098, 50.90166666666665, 32.678000000000004, 45.41156666666674, 129.5569, 50.74166666666667, 73.65736666666668, 27.014866666666663, 20.15186666666666, 27.451833333333354, 32.4519, 62.149800000000006, 84.74170000000001, 20.36776666666667, 119.9143, 46.581900000000005, 39.089633333333346, 74.25403333333333]
l4 = [74.04386666666666, 111.06856666666667, 96.50116666666668, 138.42303333333336, 148.16893333333337, 110.57473333333333, 116.60586666666657, 152.38186666666664, 102.80826666666668, 44.16793333333333, 74.5543333333333, 135.20300000000003, 91.05470000000001, 116.00090000000004, 74.7646666666667, 214.81043333333338, 145.822, 62.084833333333336, 76.21593333333334, 78.35089999999998]
l5 = [157.6634666666667, 248.5505333333334, 169.8581333333333, 81.7312, 158.26763333333338, 155.07690000000005, 302.2306333333333, 208.3100333333334, 191.82246666666668, 158.54313333333337, 85.06556666666664, 91.51496666666668, 188.97543333333334, 265.69546666666673, 89.86043333333336, 109.68496666666671, 257.41953333333333, 111.99699999999997, 93.03476666666666, 203.7581333333333]
l6 = [243.028, 334.411, 209.138, 189.686, 287.697, 288.106, 286.272, 244.924, 338.959, 133.660, 184.594, 161.496, 246.120, 328.837, 207.594, 162.780, 384.442, 144.421, 127.170, 147.343]

avg = [sum(l1) / 20, sum(l2) / 20, sum(l3) / 20, sum(l4) / 20, sum(l5) / 20, sum(l6) / 20]

l1 = np.array(l1)
l2 = np.array(l2)
l3 = np.array(l3)
l4 = np.array(l4)
l5 = np.array(l5)
l6 = np.array(l6)
variance = [l1.var() / 300, l2.var() / 300, l3.var() / 300, l4.var() / 300, l5.var() / 300, l6.var() / 300]


if __name__ == "__main__":

    error_params=dict(elinewidth=1,ecolor='k',capsize=10)#设置误差标记参数

    fig, ax = plt.subplots()

    plt.barh(["0.3", "0.7", "1", "456", "p-0.5", "RL"], avg, xerr=variance, error_kw = error_params, color=colorList)

    ax.set_xlabel("Average rewards", fontsize=32, fontproperties='Times New Roman'
                  #, fontweight='bold'
                  )

    #ax.patch.set_facecolor((0.925, 0.125, 0.90, 0.035))

    plt.xticks(fontproperties='Times New Roman', fontsize=20)
    plt.yticks(fontproperties='Times New Roman', fontsize=20)

    fig.tight_layout()
    plt.savefig('./pic/hbar_average_rewards.png'
                #, format='pdf'
                , bbox_inches='tight'
                , pad_inches=0.1, dpi=500)

    plt.grid(True, linestyle=':',alpha=0.6)
    plt.show()
